package bots;

import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.regex.Pattern;

import master.Master;
import util.*;

public class EnglishGuy extends Master {
	
	ArrayList<String> firmNames;
	private Pattern firmIdPatter;
	private Pattern addresPattern;
	private Pattern adresWrapPattern;

	public EnglishGuy() {		
		firmNames = Files.loadListFromFile("input.txt", 1, "\t");
		
		pProc = new PatternProcessor();
		writter = new Writter("output.csv");
		
		firmIdPatter = Pattern.compile("<a href=\"details.aspx\\/(.+?)\\/");
		
		adresWrapPattern = Pattern.compile("<dt>Address: </dt>(.+?)<dt>", Pattern.DOTALL);
		addresPattern = Pattern.compile(">(.+?)<", Pattern.DOTALL);
		
		pProc.addPattern(4, Pattern.compile("<dt>Town/City: </dt>(.+?)<dt>", Pattern.DOTALL));
		pProc.addPattern(5, Pattern.compile("<dt>Postcode: </dt>(.+?)<dt>", Pattern.DOTALL));
		pProc.addPattern(6, Pattern.compile("<dt>County: </dt>(.+?)<dt>", Pattern.DOTALL));
		pProc.addPattern(7, Pattern.compile("<dt>Trading Names: </dt>(.+?)<dt>", Pattern.DOTALL));
		pProc.addReplacement(4, "<.+?>", "");
		pProc.addReplacement(5, "<.+?>", "");
		pProc.addReplacement(6, "<.+?>", "");
		pProc.addReplacement(7, "<.+?>", "");
	}		

	public static void main(String[] args) {		
		new EnglishGuy().start();
	}

	@Override
	public void run() {
		int total = firmNames.size();
		int current = 1;
		for (String firmName : firmNames) {
			System.out.println(current++ + "/" + total);
			
			if (current <= 167) continue;
			
			firmName = firmName.replace("...", "");
			String resultHtml = fetchPageContent("https://www.claimsregulation.gov.uk/search.aspx?search=simple&business="+URLEncoder.encode(firmName)+"&authID=&sector=-1&county=-1&status=-1");
			String id = findInString(resultHtml, firmIdPatter);
			
			sleep(1000);
			
			String detailsPage = fetchPageContent("https://www.claimsregulation.gov.uk/details.aspx/"+id+"/");
			write(detailsPage);
			
			sleep(1000);
		}
	}
	
	@Override
	public void write (String data) {
		String adressesData = findInString(data, adresWrapPattern);
		Object [] addresses = findAllInString(adressesData, addresPattern).toArray();
		
		if (addresses == null) {
			addresses = new Object[] {"", "", ""};
		}
		
		pProc.addData(1, addresses.length>0?((String)addresses[0]).trim():"");
		pProc.addData(2, addresses.length>1?((String)addresses[1]).trim():"");
		pProc.addData(3, addresses.length>2?((String)addresses[2]).trim():"");
		
		pProc.processPatterns(data, writter);
	}
	
}


