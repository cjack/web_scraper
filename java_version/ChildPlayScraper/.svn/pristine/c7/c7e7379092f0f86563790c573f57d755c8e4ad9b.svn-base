package bots;

import master.Master;
import util.*;

import java.io.BufferedReader;
import java.io.File;
import java.io.InputStreamReader;
import java.util.regex.Pattern;
import java.util.*;

import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.methods.GetMethod;
import org.json.JSONArray;
import org.json.JSONObject;

public class Earthrated extends Master {

	public Earthrated(Integer firstPage, Integer lastPage) {		
		this();
		firstPageNumber = firstPage;
		lastPageNumber = lastPage;
	}
	
//	public Earthrated() {		
//		ArrayList<String> codes = Files.loadListFromFile("zipcodes.txt");
//		
//		for (String code : codes) {
//			String html = fetchPageContent("http://www.earthrated.com/storedata/?v=stores&ts="+System.currentTimeMillis()+"&postal="+code+"&dist=31");
//			System.out.println("Doing code: " + code);
//			
//			Writter w = new Writter("zips/" + code + ".txt");
//			w.writeLine(html);
//			w.close();
//			sleep(3000);
//		}
//	}	
	
	private HashSet<String> shopIDs = new HashSet<String>();
	
	public Earthrated() {
		writter = new Writter("earthrated.csv");
		pProc = new PatternProcessor();
		
		writter.writeLine("Store Name,Address,City,Zip Code,State,Website,Phone Number,Email");
		
		File [] files = new File("zips").listFiles();
		
		for (File f : files) {
			String content = Files.loadFileData(f.getAbsolutePath());
			if (content.contains("[{},null]")) continue;
			
			try {
				JSONArray array = new JSONArray(content);
				for(int i = 0; i < array.length(); i++)	{
				      JSONObject object = array.getJSONObject(i);
				      
				      String shopID = object.get("id").toString();
				      if (shopIDs.contains(shopID)) continue;
				      
				      pProc.addData(1, object.get("name").toString());
				      pProc.addData(2, object.get("address").toString());
				      pProc.addData(3, object.get("city").toString());
				      pProc.addData(4, object.get("postal").toString());
				      pProc.addData(5, object.get("state").toString());
				      pProc.addData(6, object.get("web").toString());
				      pProc.addData(7, object.get("phone").toString());
				      pProc.addData(8, object.get("email").toString());
				      
				      pProc.processPatterns("", writter);
				      
				      shopIDs.add(shopID);
				}
			} catch (Exception e) {
				e.printStackTrace();
				System.out.println(content);
			}
			
		}
	}

	public static void main(String[] args) {
		if (args.length == 2) {
			new Earthrated(Integer.parseInt(args[0]), Integer.parseInt(args[1])).start();
		} else {
			new Earthrated().start();
		}
		
	}

	@Override
	public void run() {
		
	}
	
	public String fetchPageContent(String fromPage) {
		try {
			if (httpClient == null) {
				httpClient = new HttpClient();
				httpClient.getHttpConnectionManager().getParams().setConnectionTimeout(60000); 
				httpClient.getHttpConnectionManager().getParams().setSoTimeout(60000);
			}
			
			GetMethod get = new GetMethod(fromPage);
			get.setRequestHeader("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0");
			httpClient.executeMethod(get);
			
			StringBuilder sb = new StringBuilder();
			String line;
			BufferedReader in = new BufferedReader(new InputStreamReader(get.getResponseBodyAsStream(), "utf-8"));
			while ((line = in.readLine()) != null) {
				sb.append(line).append("\n");
			}
			
			in.close();
			get.releaseConnection();
			
			return sb.toString();			
		} catch (Exception e) {
			System.err.println("#### GREÅ KA ZA: " + fromPage + " ####");
			e.printStackTrace();			
			return null;
		}
	}
	
	@Override
	public void write (String data) {
		
	}
	
}


