package main;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.regex.Pattern;

import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.methods.GetMethod;

import util.Files;
import util.Patterns;
import util.Writter;

public class NameSplit {
	
	private static HttpClient httpClient;
	
	public static void main(String[] args) {
		Writter w = new Writter("pglinks.txt");
		for (int i = 1; i <= 5; i++) {
			String html = fetchPageContent("http://www.propertyguru.com.sg/sitemaps/listings-"+i+".xml");
			ArrayList<String> links = Patterns.findAllInString(html, Pattern.compile("<loc>\\s*(.+?)\\s*<"));
			
			for (String link : links) {
				w.writeLine(link);
			}
			
			
		}
		
		w.close();
	}
	
	public static String fetchPageContent(String fromPage) {
		try {
			if (httpClient == null) {
				httpClient = new HttpClient();
				httpClient.getHttpConnectionManager().getParams().setConnectionTimeout(60000); 
				httpClient.getHttpConnectionManager().getParams().setSoTimeout(60000);
			}
			
			GetMethod get = new GetMethod(fromPage);
			get.setRequestHeader("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:39.0) Gecko/20100101 Firefox/39.0");
			httpClient.executeMethod(get);
			
			StringBuilder sb = new StringBuilder();
			String line;
			BufferedReader in = new BufferedReader(new InputStreamReader(get.getResponseBodyAsStream(), "utf-8"));
			while ((line = in.readLine()) != null) {
				sb.append(line).append("\n");
			}
			
			in.close();
			get.releaseConnection();
			
			return sb.toString();			
		} catch (Exception e) {
			System.err.println("#### GREÅ KA ZA: " + fromPage + " ####");
			e.printStackTrace();			
			return null;
		}
	}
}
