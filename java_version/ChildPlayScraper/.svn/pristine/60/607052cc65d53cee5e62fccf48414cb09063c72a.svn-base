package bots;

import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.InputStream;
import java.util.Properties;
import java.util.regex.Pattern;

import master.Master;

import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.cookie.CookiePolicy;
import org.apache.commons.httpclient.methods.GetMethod;
import org.apache.commons.httpclient.params.HttpMethodParams;

public class NCBIpdfScraper extends Master {

	public NCBIpdfScraper(Integer firstPage, Integer lastPage) {		
		this();
		firstPageNumber = firstPage;
		lastPageNumber = lastPage;
	}
	
	public NCBIpdfScraper() {		
		Properties properties = new Properties();
		try {
			properties.load(new FileReader("settings.txt"));
			firstPageNumber = Integer.parseInt(properties.getProperty("fromID").trim());
			lastPageNumber = Integer.parseInt(properties.getProperty("untilID").trim());
		} catch (Exception e) {
			e.printStackTrace();
			lastPageNumber = Integer.MAX_VALUE;
		}			
	}	

	public static void main(String[] args) {
		if (args.length == 2) {
			new NCBIpdfScraper(Integer.parseInt(args[0]), Integer.parseInt(args[1])).start();
		} else {
			new NCBIpdfScraper().start();
		}
		
	}
	
	private Pattern pdfPageLinkP = Pattern.compile("type=\"application/pdf\"\\s+href=\"(.+?)\"");
	private Pattern pdfFileNameP = Pattern.compile("/pdf/(.+?\\.pdf)");
	private Pattern title1P = Pattern.compile("<h1 class=\"content-title\">(.+?)<");
	private Pattern title2P = Pattern.compile("<span class=\"cit\">(.+?\\d{4})");

	@Override
	public void run() {
		for (int i = firstPageNumber; i <= lastPageNumber; i++) {
			String pageHtml = fetchLocation("http://www.ncbi.nlm.nih.gov/pmc/articles/pmid/" + i + "/");
			
			String pdfLink = findInString(pageHtml, pdfPageLinkP); 
			
			System.out.println("Scraping: http://www.ncbi.nlm.nih.gov/pmc/articles/pmid/" + i + "/");
			
			if (pdfLink.equals("")) {
				System.out.println("Page not found!");
				sleep(10000);
				continue;
			}
			
			
			
			String title1 = findInString(pageHtml, title1P);
			String title2 = findInString(pageHtml, title2P);
						
			savePDF(pdfLink, title1 + ". " + title2 + ".pdf");
			
			sleep(10000);
			
		}
	}
	
	private void savePDF(String pdfLink, String fileName) {
		try {
			
			GetMethod get = new GetMethod("http://www.ncbi.nlm.nih.gov" + pdfLink);
			get.setRequestHeader("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:37.0) Gecko/20100101 Firefox/37.0");
			get.setRequestHeader("Accept-Encoding", "gzip, deflate");
			get.setRequestHeader("Host", "www.ncbi.nlm.nih.gov");
			
			httpClient.executeMethod(get);
			
			InputStream in = get.getResponseBodyAsStream();
	        FileOutputStream out = new FileOutputStream(new File("pdfs/" + fileName));
	        byte[] b = new byte[1024];
	        int len = 0;
	        while ((len = in.read(b)) != -1) {
	              out.write(b, 0, len);
	        }
	        in.close();
	        out.close();
	        
	        get.releaseConnection();
			
	        
	        System.out.println("Found document: " + fileName);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}

	public String fetchLocation(String fromPage) {
		try {
			if (httpClient == null) {
				httpClient = new HttpClient();
				httpClient.getParams().setParameter("http.protocol.single-cookie-header", true);
				httpClient.getParams().setCookiePolicy(CookiePolicy.BROWSER_COMPATIBILITY);
			}
			
			GetMethod get = new GetMethod(fromPage);
			get.setRequestHeader("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:37.0) Gecko/20100101 Firefox/37.0");
			get.setRequestHeader("Accept-Encoding", "gzip, deflate");
			get.setRequestHeader("Host", "www.ncbi.nlm.nih.gov");
			get.setRequestHeader("Cookie", "pmc.article.report=; WebEnv=1nicTb%40CE8F0A5454776F11_0023SID");
			
			HttpMethodParams params = new HttpMethodParams();

			params.setSoTimeout(60000);
			params.setCookiePolicy(CookiePolicy.BROWSER_COMPATIBILITY);

			get.setParams(params);
			
			httpClient.executeMethod(get);
			
			String html = getDataFromStream(get.getResponseBodyAsStream(), true);
			
			get.releaseConnection();
			
			return html;			
		} catch (Exception e) {
			return null;
		}
	}
	
	@Override
	public void write (String data) {
		
	}
	
}


