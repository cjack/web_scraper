package bots;

import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.ScrollPaneConstants;

import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.URI;
import org.apache.commons.httpclient.methods.GetMethod;
import org.apache.commons.httpclient.methods.PostMethod;

import master.Master;
import util.*;

public class Captcha extends Master {
	
	private HttpClient client;
	private JFrame frame;
	private JPanel captchaPanel;
	private JTextField captchaText;
	private JTextField dateText;
	private static JButton startScrapeBtn;
	private JTextArea textArea;

	public Captcha() {		
		try {
			client = new HttpClient();
			
					    
		    frame = new JFrame("Scrapper");		    
		    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		    frame.setLayout(null);
		    frame.setSize(600, 600);
		    frame.setLocationRelativeTo(null);
		    
		    JButton getCaptchaBtn = new JButton("Get Captcha");
		    getCaptchaBtn.setSize(150, 30);
		    getCaptchaBtn.setLocation(225, 20);
		    getCaptchaBtn.addActionListener(new ActionListener() {
				
				@Override
				public void actionPerformed(ActionEvent arg0) {
					getCaptcha();
					
				}
			});
		    frame.add(getCaptchaBtn);
		    
		    captchaPanel = new JPanel();
		    
		    captchaPanel.setSize(200, 75);
		    captchaPanel.setLocation(200, 70);
		    captchaPanel.setBorder(BorderFactory.createBevelBorder(1));
		    frame.add(captchaPanel);
		    
		    JLabel labelCaptcha = new JLabel("Enter captcha");
		    labelCaptcha.setLocation(200, 155);
		    labelCaptcha.setSize(100, 25);
		    
		    captchaText = new JTextField();
		    captchaText.setLocation(300, 155);
		    captchaText.setSize(100, 25);
		    
		    JLabel labelDate = new JLabel("Enter date");
		    labelDate.setLocation(200, 180);
		    labelDate.setSize(100, 25);
		    
		    dateText = new JTextField();
		    dateText.setLocation(300, 180);
		    dateText.setSize(100, 25);
		    
		    textArea = new JTextArea();
			textArea.setSize(460, 400);
			textArea.setLocation(20, 110);
			
			JScrollPane scroll = new JScrollPane(textArea);
			scroll.setSize(550, 290);
			scroll.setLocation(20, 260);
			
	        scroll.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
		    
		    frame.add(labelCaptcha);
		    frame.add(labelDate);
		    frame.add(captchaText);
		    frame.add(dateText);
		    frame.add(startScrapeBtn);
		    frame.add(scroll);
		    
		    frame.setVisible(true);
		    
//		    String response;
//		    Scanner scan = new Scanner(System.in);
//		    response = scan.next();
//		    System.out.println(response);
//		    
//		    PostMethod post = new PostMethod("http://epwsgdp1.courts.state.va.us/gdcourts/captchaVerification.do");
//		    post.setFollowRedirects(false);
//		    
//		    post.setRequestHeader("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
//		    post.setRequestHeader("Host", "epwsgdp1.courts.state.va.us");
//		    post.setRequestHeader("Referer", "http://epwsgdp1.courts.state.va.us/gdcourts/captchaVerification.do?landing=landing");
//		    
//		    post.setParameter("accept", "Accept");
//		    post.setParameter("j_captcha_response", response);
//		    post.setParameter("pageName", "landingCaptchaVerificationPage");
//		    post.setParameter("showCaptcha", "true");
//		    
//		    client.executeMethod(post);
//		    
//		    for (Header h : get.getResponseHeaders()) {
//				System.out.println(h.getName() + " - " + h.getValue());					
//			}
//		    
//		    get = new GetMethod("http://epwsgdp1.courts.state.va.us/gdcourts/caseSearch.do?fromSidebar=true&searchLanding=searchLanding&searchType=hearingDate&searchDivision=V&searchFipsCode=059");
//		    get.setRequestHeader("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
//			get.setRequestHeader("Host", "epwsgdp1.courts.state.va.us");
//			get.setRequestHeader("Referer", "http://epwsgdp1.courts.state.va.us/gdcourts/captchaVerification.do?landing=landing");
//			
//			client.executeMethod(get);
//			
//			post = new PostMethod("http://epwsgdp1.courts.state.va.us/gdcourts/caseSearch.do");
//			post.setRequestHeader("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
//		    post.setRequestHeader("Host", "epwsgdp1.courts.state.va.us");
//		    post.setRequestHeader("Referer", "http://epwsgdp1.courts.state.va.us/gdcourts/caseSearch.do?fromSidebar=true&searchLanding=searchLanding&searchType=hearingDate&searchDivision=V&searchFipsCode=059");
//		    
//		    post.setParameter("caseSearch", "Search");
//		    post.setParameter("formAction", "");
//		    post.setParameter("searchCourtroom", "");
//		    post.setParameter("searchFipsCode", "059");
//		    post.setParameter("searchHearingTime", "");
//		    post.setParameter("searchHearingType", "");
//		    post.setParameter("searchTerm", "11/12/2014");
//		    
//		    client.executeMethod(post);
//			
//			System.out.println(post.getResponseBodyAsString());
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		
	}
	
	private Pattern nextPattern = Pattern.compile("value=\"Next\"");
	private Pattern wrapPattern = Pattern.compile("<tr class=(.+?)</tr>", Pattern.DOTALL);
	private Pattern tdPattern = Pattern.compile("(<td class=\"gridrow\".+?</td>)", Pattern.DOTALL);
	
	private int count = 0;

	private void extractData() {	
		
		pProc.addPattern(1, Pattern.compile("name=\"checkedCases\"\\s+value=\"(.+?)\""));	
		
		pProc.addReplacement(3, "\\&lt;", "<");
		pProc.addReplacement(3, "\\&gt;", ">");
		
		try {
			PostMethod post = new PostMethod("http://epwsgdp1.courts.state.va.us/gdcourts/caseSearch.do");
			post.setRequestHeader("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
		    post.setRequestHeader("Host", "epwsgdp1.courts.state.va.us");
		    post.setRequestHeader("Referer", "http://epwsgdp1.courts.state.va.us/gdcourts/caseSearch.do?fromSidebar=true&searchLanding=searchLanding&searchType=hearingDate&searchDivision=T&searchFipsCode=059");
		    
		    post.setParameter("caseSearch", "Search");
		    post.setParameter("firstName", "");
		    post.setParameter("formAction", "");
		    post.setParameter("lastName", "");
		    post.setParameter("middleName", "");
		    post.setParameter("searchCourtroom", "");
		    post.setParameter("searchFipsCode", "059");
		    post.setParameter("searchHearingTime", "");
		    post.setParameter("searchHearingType", "");
		    post.setParameter("searchTerm", "11/12/2014");
		    post.setParameter("searchUnitNumber", "");
		    post.setParameter("suffix", "");
		    
		    client.executeMethod(post);
		    
		    String html = post.getResponseBodyAsString();
		    
		    write(html);
		    
		    Matcher nextMatcher = nextPattern.matcher(html);
	    	if (!nextMatcher.find()) {
	    		return; // nema vise
	    	}
	    	
	    	sleep(2000);
		    
		    while (true) {
		    	
		    	post = new PostMethod("http://epwsgdp1.courts.state.va.us/gdcourts/caseSearch.do");
				post.setRequestHeader("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
			    post.setRequestHeader("Host", "epwsgdp1.courts.state.va.us");
			    post.setRequestHeader("Referer", "http://epwsgdp1.courts.state.va.us/gdcourts/caseSearch.do");
			    
			    post.setParameter("caseInfoScrollForward", "Next");
			    post.setParameter("firstName", "");
			    post.setParameter("formAction", "");
			    post.setParameter("lastName", "");
			    post.setParameter("middleName", "");
			    post.setParameter("searchCourtroom", "");
			    post.setParameter("searchFipsCode", "059");
			    post.setParameter("searchHearingTime", "");
			    post.setParameter("searchHearingType", "");
			    post.setParameter("searchTerm", "11/12/2014");
			    post.setParameter("searchUnitNumber", "");
			    post.setParameter("suffix", "");
			    post.setParameter("unCheckedCases", "");
			    
			    client.executeMethod(post);
			    
			    html = post.getResponseBodyAsString();
			    
			    write(html);		    	
		    	
		    	nextMatcher = nextPattern.matcher(html);
		    	if (!nextMatcher.find()) {
		    		break; // nema vise
		    	}
		    	
		    	sleep(4000);
		    }
		    
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}

	public static void main(String[] args) {
		
		
		 startScrapeBtn = new JButton("Start scrape");
		 startScrapeBtn.setSize(150, 30);
		 startScrapeBtn.setLocation(225, 220);
		 startScrapeBtn.addActionListener(new ActionListener() {
			    final Captcha c = new Captcha();
				@Override
				public void actionPerformed(ActionEvent arg0) {
					startScrapeBtn.setEnabled(false);
					c.start();
					
				}
				
			});
		
		
	}
	
	public void getCaptcha() {
		try {
			GetMethod get = new GetMethod("http://epwsgdp1.courts.state.va.us/gdcourts/captchaVerification.do?landing=landing");
			get.setFollowRedirects(false);
			
			String location = "";
			
			client.executeMethod(get);

			for (Header h : get.getResponseHeaders()) {
				if (h.getName().contains("Location")) {
					location = h.getValue();
				}
			}
			
			get = new GetMethod(location);
			get.setRequestHeader("Accept", "image/png,image/*;q=0.8,*/*;q=0.5");
			get.setRequestHeader("Host", "epwsgdp1.courts.state.va.us");
			get.setRequestHeader("Referer", "http://epwsgdp1.courts.state.va.us/gdcourts/captchaVerification.do?landing=landing");
			
			get.setURI(new URI("http://epwsgdp1.courts.state.va.us/gdcourts/captcha.jpg", true));
		    client.executeMethod(get);

		    BufferedImage im = ImageIO.read(get.getResponseBodyAsStream());
		    ImageIcon icon = new ImageIcon(im);
		    
		    JLabel label = new JLabel(icon);
		    label.setSize(200, 75);
		    
		    
		    captchaPanel.add(label);
		    captchaPanel.repaint();
		
		    
		    
		    
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	public void run() {
		String response = captchaText.getText().trim();
		String time = dateText.getText().trim();
		
		pProc = new PatternProcessor();
		writter = new Writter("cases-" + time.replace("/", "-") + ".csv");
	    
		try {		
		
		    PostMethod post = new PostMethod("http://epwsgdp1.courts.state.va.us/gdcourts/captchaVerification.do");
		    post.setFollowRedirects(false);
		    
		    post.setRequestHeader("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
		    post.setRequestHeader("Host", "epwsgdp1.courts.state.va.us");
		    post.setRequestHeader("Referer", "http://epwsgdp1.courts.state.va.us/gdcourts/captchaVerification.do?landing=landing");
		    
		    post.setParameter("accept", "Accept");
		    post.setParameter("j_captcha_response", response);
		    post.setParameter("pageName", "landingCaptchaVerificationPage");
		    post.setParameter("showCaptcha", "true");
		    
		    client.executeMethod(post);	    
		    
		    GetMethod get = new GetMethod("http://epwsgdp1.courts.state.va.us/gdcourts/caseSearch.do?fromSidebar=true&searchLanding=searchLanding&searchType=hearingDate&searchDivision=T&searchFipsCode=059");
		    get.setRequestHeader("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8");
			get.setRequestHeader("Host", "epwsgdp1.courts.state.va.us");
			get.setRequestHeader("Referer", "http://epwsgdp1.courts.state.va.us/gdcourts/captchaVerification.do?landing=landing");
			
			client.executeMethod(get);
		
		} catch (Exception e) {
			e.printStackTrace();
		}	
		
		extractData();
		
		writter.close();
		textArea.append("FINISHED - Check file cases-" + time.replace("/", "-") + ".csv");
		textArea.append("\n");
		textArea.setCaretPosition(textArea.getDocument().getLength());
	}
	
	@Override
	public void write (String data) {
		ArrayList<String> wrappers = Patterns.findAllInString(data, wrapPattern);
		
		for (String wrap : wrappers) {
			ArrayList<String> tds = Patterns.findAllInString(wrap, tdPattern);
			
			String def = tds.get(2).replaceAll("<.+?>", "").trim();
			String charge = tds.get(4).replaceAll("<.+?>", "").trim();
			String result = tds.get(6).replaceAll("<.+?>", "").trim();
			
			pProc.addData(2, def);
			pProc.addData(3, charge);
			pProc.addData(4, result);
			
			count++;
			
			textArea.append(count + ". " + def + ", " + result);
			textArea.append("\n");
			textArea.setCaretPosition(textArea.getDocument().getLength());
			
			pProc.processPatterns(wrap, writter);
		}
	}
	
}


