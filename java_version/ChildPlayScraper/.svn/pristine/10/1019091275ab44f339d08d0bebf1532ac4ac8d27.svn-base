package bots;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.regex.Pattern;

import master.Master;
import util.*;

public class NPILookup extends Master {

	public NPILookup(Integer firstPage, Integer lastPage) {		
		this();
		firstPageNumber = firstPage;
		lastPageNumber = lastPage;
	}
	
	private Writter errorsWriter = new Writter("docErrors.txt");
	
	public NPILookup() {		
		writter = new Writter("outputDoctors.csv");
	}	

	public static void main(String[] args) {
		if (args.length == 2) {
			new NPILookup(Integer.parseInt(args[0]), Integer.parseInt(args[1])).start();
		} else {
			new NPILookup().start();
		}
		
	}

	@Override
	public void run() {
		ArrayList<String> doctors = Files.loadListFromFile("doctors.txt");
		
		int count = 1;
		
		for (String doctor : doctors) {
			String parts [] = doctor.split("\t");
			
			String name = parts[0];
			String state = parts[2];
			
			if (parts.length < 16) {
				continue;
			}
			
			String city = parts[15];
			
			String npi = findNPI(name, state, city);
			if (npi.equals("")) {
				errorsWriter.writeLine(name + ", " + city + ", " + state);
			}
			
			ArrayList<String> doc = new ArrayList<String>(Arrays.asList(parts));
						
			doc.add(1, npi);
			
			String outStr = Utils.joinStringFromArray(doc, ",");
			System.out.println(count++ + ". " + outStr);
			writter.writeLine(outStr);
		}
		
		errorsWriter.close();
		writter.close();
	}
	
	private Pattern docWrap = Pattern.compile("<td><a href=\"/doctors/.+?>(.+?)</tr>", Pattern.DOTALL);
	private Pattern docData = Pattern.compile("<code.+?>(.+?)<.+?<td>.+?<td>.+?<td>(.+?),", Pattern.DOTALL);
	
	private String findNPI(String name, String state, String city) {
		
		String nameParts [] = name.split(" ");
		
		if (nameParts.length < 2) {
			return "";
		}
		
		String fName = nameParts[0];
		String lName = nameParts[1];
		if (nameParts.length > 2) {
			if (nameParts[1].contains(".")) {
				lName = nameParts[2];
			}
		}
		
		sleep(1000);
		String data = fetchPageContent("http://npidb.org/npi-lookup/?npi=&fname="+fName+"+&lname="+lName+"&state="+state.toLowerCase()+"&sound=0&search=#main");
		String docWrapData = findInString(data, docWrap);
		
		if (docWrapData.equals("")) {
			data = fetchPageContent("http://npidb.org/npi-lookup/?npi=&fname="+fName+"+&lname="+lName+"&state=&sound=0&search=#main");
			docWrapData = findInString(data, docWrap);
			
			if (docWrapData.equals("")) {
				return "";
			}
		}
		
		String doctorData [] = findGroupsInString(docWrapData, docData, 2);
		
		if (doctorData == null) {
			return "";
		}
		
		if (doctorData[1].toLowerCase().equals(city.toLowerCase())) {
			return doctorData[0];
		}
		
		return "";		
	}

	@Override
	public void write (String data) {
		
	}
	
}


