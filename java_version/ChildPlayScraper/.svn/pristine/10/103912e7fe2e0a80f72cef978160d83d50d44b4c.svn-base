package bots;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.regex.Pattern;

import master.Master;
import util.*;

public class KickStar extends Master {

	public KickStar(Integer firstPage, Integer lastPage) {		
		this();
		firstPageNumber = firstPage;
		lastPageNumber = lastPage;
	}
	
	public KickStar() {		
		writter = new Writter("kickout.csv");
		pProc = new PatternProcessor();
		
		pProc.addPattern(1, Pattern.compile("<h2>\\s+(.+?)\\s+<"));
		pProc.addPattern(2, Pattern.compile("<span class=\"backed\">\\s+Backed(.+?)project", Pattern.DOTALL));
		pProc.addPattern(3, Pattern.compile("<span class=\"location\">(.+?)<"));
	}	

	public static void main(String[] args) {
		if (args.length == 2) {
			new KickStar(Integer.parseInt(args[0]), Integer.parseInt(args[1])).start();
		} else {
			new KickStar().start();
		}
		
	}
	
	private Pattern linkP = Pattern.compile("<a href=\"(/profile.+?)\""); 

	@Override
	public void run() {
		String data = Files.loadFileData("test.htm");
		
		ArrayList<String> links = findAllInString(data, linkP);
		HashSet<String> set = new  HashSet<String>();
		
		set.addAll(links);
		
		for (String link : set) {
			System.out.println("Processing " + "https://www.kickstarter.com" + link);
			String details = fetchPageContent("https://www.kickstarter.com" + link);
			
			write(details);
		}
	}
	
	@Override
	public void write (String data) {
		pProc.processPatterns(data, writter);
	}
	
}


