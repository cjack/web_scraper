package bots;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import master.Master;
import util.*;

public class SmesanSajt extends Master {

	private Pattern linkWrapPattern;
	private Pattern linkPattern;

	public SmesanSajt() {		
		
		paginationPattern = Pattern.compile("-\\s+Next\\s+Page");
		detailsPagePattern = Pattern.compile("<td width=100% height=100% bgcolor=F1F5F6 valign=top>(.+?)</td>", Pattern.DOTALL);
		linkWrapPattern = Pattern.compile("TABLE BORDER=0(.+?)</TABLE>", Pattern.DOTALL);
		linkPattern = Pattern.compile("href=\"(.+?)\"");

		pProc = new PatternProcessor();
		writter = new Writter("output.csv");
		
		pProc.addPattern(1, Pattern.compile("<font face=verdana><font size=2><b>(.+?)</b>")); //name
		pProc.addPattern(2, Pattern.compile("<b>Address:</b>\\s+(.+?),")); //adresa
		pProc.addPattern(3, Pattern.compile("<b>Address:</b>.+?,(.+?)\\.")); //grad
		pProc.addData(4, "");
		pProc.addPattern(5, Pattern.compile("<b>Phone:</b>\\s+(.+?)\\s+<br>")); //phone
		pProc.addPattern(6, Pattern.compile("<b>Web:</b>\\s+.+?HREF=\"(.+?)\"")); //web
	}		

	public static void main(String[] args) {		
		new SmesanSajt().start();
	}

	
	public void run() {
		
		ArrayList<String> listaLinkova = Files.loadListFromFile("input.txt");
		
		ArrayList<String> categoryList = new ArrayList<String>();
		
		for(String link : listaLinkova) {
			
			String html = fetchPageContent(link);
			
			String wrap = Patterns.findInString(html, linkWrapPattern);
			
			categoryList.addAll(findAllInString(wrap, linkPattern));
			
			sleep(1000);
		}
		
		for(String cat : categoryList) {
			
			
			firstPageNumber = 0;
			pageIncrement = 10;
			
			incrementPartOneURL = "http://www.bwc.com.au" + cat + "&start=";
			
			typeOneProcessing();
		}
		
	}
	
	public void write (String data) {
		
		pProc.processPatterns(data, writter);
		
	}
	
	protected void typeOneProcessing() {
		paginationURL = null;
		detailsPageURL = null;
		String pageHtml = null;
//		String detailsPageHtml = null;
//		String carURLHash = null;
//		long carID;
		int errorDelay = initialErrorDelay;

		Matcher paginationMatcher;
		Matcher urlMatcher;
		HashSet<String> carURLs;

		mainLoop: for (int i = firstPageNumber; i <= lastPageNumber; i += pageIncrement) {
			paginationURL = incrementPartOneURL + formParam + formValue + pageNumberParam + i + incrementPartTwoURL;
			pageHtml = getHtml(paginationURL);
			
		//	System.out.println(pageHtml);

			if (pageHtml != null) {
				System.out.println("-Pagination page: " + paginationURL);
				
				ArrayList<String> allWrapers = findAllInString(pageHtml, detailsPagePattern);
				
				for(String wraper : allWrapers) {
					write(wraper);
				}
				
				paginationMatcher = paginationPattern.matcher(pageHtml);
				if (!paginationMatcher.find()) {
					if (paginationCheckTime != 0) {
					//	System.out.println("Last pagination check for " + webSiteID + " in progress ...");
						sleep(paginationCheckTime);

						pageHtml = getHtml(paginationURL);
						if (pageHtml == null) {
							break;
						}

						paginationMatcher = paginationPattern.matcher(pageHtml);
						if (!paginationMatcher.find()) {
							break;
						} else {
							i -= pageIncrement;
						}
					} else {
						break;
					}
				}
			} else {
				errorCount++;
				if (errorCount == 5) {
					break;
				}
				i -= pageIncrement;
				
				sleep(errorDelay);
				errorDelay *= 5;				
			}
			if (stopped) {
				break;
			}
		}
	}
	
}


