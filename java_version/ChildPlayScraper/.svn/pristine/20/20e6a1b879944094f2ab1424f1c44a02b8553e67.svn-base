package bots;

import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.regex.Pattern;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import util.Files;
import util.PatternProcessor;
import util.Writter;
import master.Master;

public class Medischebanenbank extends Master {
	
	private Pattern mainWrapperPattern;
	private Pattern detUrlPattern;
	private String mainWrapper;
	private ArrayList<String> urls;
	private ArrayList<String> urlList;
	private HashSet<String> urlSet;
	private Writter writter2;
	private Pattern namePattern;
	private Pattern bedrijfPattern;
	private Pattern sectorPattern;
	private Pattern specialisatiePattern;
	private Pattern StandplaatsPattern;
	private Pattern RegioPattern;
	private Pattern AanstellingPattern;
	private Pattern DienstverbandPattern;
	private Pattern NiveauPattern;
	private Pattern ErvaringPattern;
	private Pattern BranchePattern;
	private Pattern SalarisPattern;
	private Pattern PlaatsingsdatumPattern;
	private Pattern VacaturebeschrijvingPattern;
	private JSONObject obj;
	private JSONArray ja;

	public Medischebanenbank(){
		
		/*urlList = Files.loadListFromFile("medischebanenbank.txt");
		urlSet = new HashSet<String>();
		
		for(String url : urlList) {
			urlSet.add(url);
		}
		
		writter = new Writter("medischebanenbank.csv");
		writter.writeLine("Vacaturenaam,Bedrijf,Sector,Specialisatie,Standplaats,Regio,Aanstelling,Dienstverband,Niveau,Ervaring,Branche,Salaris,Plaatsingsdatum,Vacaturebeschrijving,URL");
		
		writter2 = new Writter("medischebanenbank.txt", true);
		
		pProc = new PatternProcessor();*/
		
		ja = new JSONArray();
		
		mainWrapperPattern = Pattern.compile("<div id=\"vacancies\">(.+?)</section>", Pattern.DOTALL);
		detUrlPattern = Pattern.compile("div class=\"vacancy.*?\">.+?h3>.*?<a href=\"(.+?)\"", Pattern.DOTALL);
		
		namePattern = Pattern.compile("<article>\\s*<h1>(.+?),", Pattern.DOTALL);
		bedrijfPattern = Pattern.compile("<article>\\s*<h1>.+?>(.+?)<", Pattern.DOTALL);
		sectorPattern = Pattern.compile("<dt>Sector:\\s*</dt>\\s*<dd>(.+?)<");
		specialisatiePattern = Pattern.compile("<dt>Specialisatie:\\s*</dt>.+?>(.+?)<");
		StandplaatsPattern =  Pattern.compile("<dt>Standplaats:\\s*</dt>\\s*<dd>(.+?)<");
		RegioPattern = Pattern.compile("<dt>Regio:\\s*</dt>\\s*<dd>(.+?)<");
		AanstellingPattern = Pattern.compile("<dt>Aanstelling:\\s*</dt>\\s*<dd>(.+?)<");
		DienstverbandPattern = Pattern.compile("Dienstverband:\\s*</dt>.+?>(.+?)<");
		NiveauPattern = Pattern.compile("Niveau:\\s*</dt>.+?>(.+?)<");
		ErvaringPattern = Pattern.compile("<dt>Ervaring:\\s*</dt>\\s*<dd>(.+?)<");
		BranchePattern = Pattern.compile("Branche:\\s*</dt>.+?>(.+?)<");
		SalarisPattern = Pattern.compile("Salaris:\\s*</dt>.+?>(.+?)<");
		PlaatsingsdatumPattern = Pattern.compile("<dt>Plaatsingsdatum:\\s*</dt>\\s*<dd>(.+?)<");
		VacaturebeschrijvingPattern = Pattern.compile("<h2>Vacaturebeschrijving</h2>(.+?)<div class=\"seperator\"></div>", Pattern.DOTALL);
		
		for(int i = 1; i <= 15; i++) {
			pProc.addReplacement(i, "&amp;", "&");
			pProc.addReplacement(i, "&nbsp;", "");
			pProc.addReplacement(i, "<.+?>", "");
			pProc.addReplacement(i, "&Eacute;", "�");
			pProc.addReplacement(i, "&eacute;", "�");
			pProc.addReplacement(i, "&Euml;", "�");
			pProc.addReplacement(i, "&euml;", "�");
			pProc.addReplacement(i, "&Iuml;", "�");
			pProc.addReplacement(i, "&iuml;", "�");
			pProc.addReplacement(i, "&Oacute;", "�");
			pProc.addReplacement(i, "&oacute;", "�");
		}
		
	}
	
	public void run(){

		String html = fetchPageContent("http://www.medischebanenbank.nl/zoeken/");
		mainWrapper = findInString(html, mainWrapperPattern);
		urls = findAllInString(mainWrapper, detUrlPattern);
		
		for(String url : urls){
						
			//urlSet.add(url);
						
			//writter2.writeLine(url);
			
			obj = new JSONObject();
			
			try {
				obj.put("URL", "http://www.medischebanenbank.nl" + url);
			} catch (JSONException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			write(fetchPageContent("http://www.medischebanenbank.nl" + url));
			
		}
		
		try {
			FileWriter file = new FileWriter("medischebanenbank.json");
			file.write(ja.toString());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	public void write(String data){
	
		String name = findInString(data, namePattern);
		String bedrijf = findInString(data, bedrijfPattern);
		String sector = findInString(data, bedrijfPattern);
		String specialisatie = findInString(data, bedrijfPattern);
		String standplaats = findInString(data, bedrijfPattern);
		String regio = findInString(data, bedrijfPattern);
		String aanstelling = findInString(data, bedrijfPattern);
		String dienstverband = findInString(data, bedrijfPattern);
		String niveau = findInString(data, bedrijfPattern);
		String ervaring = findInString(data, bedrijfPattern);
		String branche = findInString(data, bedrijfPattern);
		String salaris = findInString(data, bedrijfPattern);
		String plaatsingsdatum = findInString(data, bedrijfPattern);
		String vacaturebeschrijving = findInString(data, bedrijfPattern);
		
		try {
			obj.put("Vacaturenaam", name);
			obj.put("Bedrijf", bedrijf);
			obj.put("Sector", sector);
			obj.put("Specialisatie", specialisatie);
			obj.put("Standplaats", standplaats);
			obj.put("Regio", regio);
			obj.put("Aanstelling", aanstelling);
			obj.put("Dienstverband", dienstverband);
			obj.put("Niveau", niveau);
			obj.put("Ervaring", ervaring);
			obj.put("Branche", branche);
			obj.put("Salaris", salaris);
			obj.put("Plaatsingsdatum", plaatsingsdatum);
			obj.put("Vacaturebeschrijving", vacaturebeschrijving);
		} catch (Exception e) {
		}
		
		ja.put(obj);
		
	}
	
	public static void main(String[] args) {
		
		new Medischebanenbank().run();
	}

}
