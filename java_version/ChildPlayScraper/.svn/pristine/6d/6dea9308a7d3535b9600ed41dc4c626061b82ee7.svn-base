package bots;

import java.io.BufferedWriter;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import proxy.ProxyFetcher;

import util.Sha1Hash;

import master.Master;

public class OLX extends Master {

	private BufferedWriter csvOut;
	private Pattern namePattern;
	private Pattern datePattern;
	private Pattern cityPattern;
	private Pattern pricePattern;
	private Pattern numberPattern;
	
	private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
	ProxyFetcher proxyFetcher;

	public OLX() {		
		
		proxyFetcher = new ProxyFetcher();
		initWriters();
		
		firefoxMask = true;
		
		firstPageNumber = 2400;
		pageIncrement = 1;
		requestDelay = 1100;
		
		lastPageNumber = 3400;
		
		incrementPartOneURL = "http://www.olx.in/mobile-tablets-cat-830-p-";
		
	//	incrementPartOneURL = "http://www.olx.in/nf/mobile-phones-cat-831-p-";
	//	incrementPartTwoURL = "/android%2Bphone";
		
		detailsPagePattern = Pattern.compile("<a class=\"pics-lnk\" href=\"(.+?)\"");
		namePattern = Pattern.compile("<div id=\"item-title-top\".+?pull-left\">(.+?)<\\/");
		datePattern = Pattern.compile("<span class=\"time-info\">(.+?)<\\/span>");
		cityPattern = Pattern.compile("<span class=\"place-info\">(.+?)<\\/span>");
		pricePattern = Pattern.compile("<span class=\"icon-rupees\"><\\/span>(.+?)\\s+<\\/span>");
		numberPattern = Pattern.compile("<span class=\"pull-left\">\\s+<strong>(.+?)<\\/strong>\\s+(.+?)\\s+<\\/span>");
		
	}
	
	protected void typeOneProcessing() {
		paginationURL = null;
		detailsPageURL = null;
		String pageHtml = null;
		String detailsPageHtml = null;
		String carURLHash = null;
		int errorDelay = initialErrorDelay;

		Matcher paginationMatcher;
		Matcher urlMatcher;
		HashSet<String> carURLs = new HashSet<String>();

		mainLoop: for (int i = firstPageNumber; i <= lastPageNumber; i += pageIncrement) {
			paginationURL = incrementPartOneURL + formParam + formValue + pageNumberParam + i + incrementPartTwoURL;
			
			proxyFetcher.getNextProxy();
			pageHtml = proxyFetcher.getHtmlWithProxy(paginationURL);
			
		//	System.out.println(pageHtml);

			if (pageHtml != null) {
				proxyFetcher.returnProxy();
				System.out.println("-Pagination page: " + paginationURL);
				errorCount = 0;
				errorDelay = initialErrorDelay;
				urlMatcher = detailsPagePattern.matcher(pageHtml);
				
				while (urlMatcher.find()) {
					detailsPageURL = urlMatcher.group(1);
					if (!detailsPageURL.startsWith("http:")) {
						detailsPageURL = baseURL + detailsPageURL;
					}

					detailsPageURL = fixURL(detailsPageURL);
					System.out.println("\t"+ detailsPageURL);
					carURLHash = Sha1Hash.SHA1(detailsPageURL);

					if (carURLs.contains(carURLHash)) {
						System.out.println("Contains " + detailsPageURL);
						continue;
					} else {						
						carURLs.add(carURLHash);
					}
					
					// test for duplicate url
//					if (1 == 1 + 0) {
//					//	DBWorksOnline.updateTime(carID, countryDescription.getCode());
//						recordCount++;
//						updatedRecordsCount++;
//						continue;
//					}

					detailsPageHtml = getHtml(detailsPageURL);

					if (detailsPageHtml != null) {
						write(detailsPageHtml);
						recordCount++;
						newRecordsCount++;						
					}
					
					
					sleep(requestDelay);
				}
//				paginationMatcher = paginationPattern.matcher(pageHtml);
//				if (!paginationMatcher.find()) {
//					if (paginationCheckTime != 0) {
//					//	System.out.println("Last pagination check for " + webSiteID + " in progress ...");
//						sleep(paginationCheckTime);
//
//						pageHtml = getHtml(paginationURL);
//						if (pageHtml == null) {
//							break;
//						}
//
//						paginationMatcher = paginationPattern.matcher(pageHtml);
//						if (!paginationMatcher.find()) {
//							break;
//						} else {
//							i -= pageIncrement;
//						}
//					} else {
//						break;
//					}
//				}
			} else {
				errorCount++;
				if (errorCount == 100) {
					break;
				}
				i -= pageIncrement;
				
			//	sleep(errorDelay);
				errorDelay *= 5;				
			}
			if (stopped) {
				break;
			}
		}
	}
	
	public void write(String pageHtml) {
		String title = findInString(pageHtml, namePattern);
		String date = findInString(pageHtml, datePattern);
		if (date.contains("am") || date.contains("pm")) {
			date = sdf.format(new Date());
		}		
		
		String city = findInString(pageHtml, cityPattern);
		String price = findInString(pageHtml, pricePattern);
		
		String [] parts  = findGroupsInString(pageHtml, numberPattern, 2);
		if (parts == null) {
			parts = new String [] {"anonymus", "anonymus"};
		}
		
		StringBuilder sb = new StringBuilder();
		sb.append(formatValue(title)).append(formatValue(parts[0])).append(formatValue(parts[1])).append(formatValue(city)).append(formatValue(date)).append(formatValue(price));
		
		writeLine(sb.toString());
	}
	
	public static void main(String[] args) {
		
		new OLX().run();
	}
	
	public void initWriters() {
		
		try {
			csvOut = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("oxl.csv"), "UTF-8"));
			csvOut.write("Title, Name, Phone, City, Date, Price");
			csvOut.write("\n");
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	private void writeLine(String text) {
		
		try {
			csvOut.write(text);
			csvOut.newLine();
			csvOut.flush();
		}catch(Exception e) {
			e.printStackTrace();
		}	
	}
	
	public void run() {
		
		typeOneProcessing();
		processingEnd();
		
	}

}
