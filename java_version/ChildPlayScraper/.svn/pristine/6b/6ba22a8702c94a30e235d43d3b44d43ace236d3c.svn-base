package bots;

import master.Master;
import util.*;
import java.util.regex.Pattern;
import java.util.*;

public class Ziekenhuizentransparant extends Master {

	public Ziekenhuizentransparant(Integer firstPage, Integer lastPage) {		
		this();
		firstPageNumber = firstPage;
		lastPageNumber = lastPage;
	}
	
	public Ziekenhuizentransparant() {		
		
	}	

	public static void main(String[] args) {
		if (args.length == 2) {
			new Ziekenhuizentransparant(Integer.parseInt(args[0]), Integer.parseInt(args[1])).start();
		} else {
			new Ziekenhuizentransparant().start();
		}
		
	}
	
	private Pattern leftCategoryPattern = Pattern.compile("class=linkermenu.+?AJAXTAG_VOLGORDE=(\\d+).+?>(.+?)<");

	@Override
	public void run() {
		
		String firstPageHtml = fetchPageContent("http://www.ziekenhuizentransparant.nl");
		String sessionId = findInString(firstPageHtml, Pattern.compile("(PHPSESSID=.+?)'"));
		
		String resultsHtml = fetchPageContent("http://www.ziekenhuizentransparant.nl/zoekziekenhuis.php?"+sessionId+"&uitgelogdoverzicht=1&zoek=%20");
		
		ArrayList<String[]> results = findAllGroupsInString(resultsHtml, Pattern.compile("a class=zkh pid=(\\d+) href=(.+?)>(.+?)<"));
		
		for (String [] parts : results) {
			String id = parts[0];
			String url = parts[1];
			String title = parts[2];
			System.out.println("Title: " + title);
			
		//	String detailsPageHtml = fetchPageContent("http://www.ziekenhuizentransparant.nl/" + url);			
			
			for (int year = 2013; year <= 2014; year++) {
				Writter w = new Writter("csvs/" + title.replace("/", "") + " " + year + ".csv");
				String yearHtml = fetchPageContent("http://www.ziekenhuizentransparant.nl/?jaar="+year+"&" + url.substring(url.indexOf("doezk")));
				sleep(1000);
				
				ArrayList<String []> leftCats = findAllGroupsInString(yearHtml, leftCategoryPattern);
				for (String [] leftCatParts : leftCats) {
					
					String someId = leftCatParts[0];
					String catTitle = leftCatParts[1];
					
					if (!catTitle.matches("\\d+\\.\\d+\\s+.+")) {
						continue;
					}
					
					w.writeLine(catTitle);
					
					System.out.println("Doing: " + "http://www.ziekenhuizentransparant.nl/?closedir=1&html5_volgorde="+someId+"&jaar="+year+"&" + url.substring(url.indexOf("doezk")));
					String catHtml = fetchPageContent("http://www.ziekenhuizentransparant.nl/?closedir=1&html5_volgorde="+someId+"&jaar="+year+"&" + url.substring(url.indexOf("doezk")));
				//	System.out.println(catHtml);
					
					write(catHtml, w);
					
				}
				
				w.close();
			}
				
			
		}
	}
	
	private Pattern valueWrapPattern = Pattern.compile("<tr class=LEVEL2_ONDERWERP ><.+?>(.+?)<(.+?</table>)", Pattern.DOTALL);
	private Pattern qaWrapPattern = Pattern.compile("<tr class=(?:TOELICHTING_NONUM|PERCX|NUM|EEN_ANTW_MOGELIJK) >(.+?)</tr>", Pattern.DOTALL);
	private Pattern qPattern = Pattern.compile("<td width=60%  colspan=1 valign=top>\\s+(.+?)<");
	private Pattern aPattern = Pattern.compile("<font class=antwoord>(.+?)<");
	
	public void write (String data, Writter w) {
		ArrayList<String []> valueWraps = findAllGroupsInString(data, valueWrapPattern);
		
		for (String valueParts [] : valueWraps) {
			w.writeLine(valueParts[0]);
			
			ArrayList<String> qaWraps = findAllInString(valueParts[1], qaWrapPattern);
			
			for (String qaWrap : qaWraps) {
				String question = findInString(qaWrap, qPattern).trim();
				String answer = findInString(qaWrap, aPattern).trim();
				
				w.writeLine("\""+question+"\",\"" + answer + "\"");
			}
		}
	}
	
}


