package bots;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import java.util.ArrayList;
import java.util.regex.Pattern;

import util.PatternProcessor;
import util.Writter;

import master.Master;

public class MsStorageDirect extends Master {

	private String html;
	private Pattern categoryWrapperPattern;
	private Pattern categoryPattern;
	private Pattern detailPagePattern;
	private ArrayList<String> categories;
	private String catHtml;
	private ArrayList<String> detLinks;
	private String detHtml;
	private Pattern productCodePattern;
	private Pattern imagePattern;
	private Pattern productDescriptionPattern;
	private Pattern productPricePattern;
	private Pattern tableWrapperPattern;
	private Pattern codeDescPricePattern;
	private int id;
	private String imageLink;
	private String imageName;
	private String tableWrapper;
	private ArrayList<String[]> codeDescPrice;
	private Pattern tableWrapperPattern2;
	private Pattern codeDescPricePattern2;
	private ArrayList<String> categoryWrappers;

	public MsStorageDirect() {
		
		writter = new Writter("msstorage.csv");
		writter.writeLine("Page URL,Page Title,Description Meta,Product Title,Product Sub Title,Product Overview,Product Image,Product Code,Product Description,Product Price,ID");
		
		pProc = new PatternProcessor();
		
		categoryWrapperPattern = Pattern.compile("<li class='column'>(.+?)</li>", Pattern.DOTALL);
		categoryPattern = Pattern.compile("<a href='(.+?)' class='category'");
		
		detailPagePattern = Pattern.compile("div class=\"item(?: last)?\">\\s*<a href=\"(.+?)\"", Pattern.DOTALL);
		
		pProc.addPattern(2, Pattern.compile("<title>\\s+(.+?)\\s+</title>"));
		pProc.addPattern(3, Pattern.compile("<meta name=\"description\" content=\"(.+?)\"", Pattern.DOTALL));
		pProc.addPattern(4, Pattern.compile("<div id=\"tierLeft\".+?<h1>(.+?)</h1>", Pattern.DOTALL));
		pProc.addPattern(5, Pattern.compile("<h2 class=\"product\">(.+?)</h2>"));
		pProc.addPattern(6, Pattern.compile("<div id=\"tierLeft\".+?<p>(.+?)(?:</ul>|<div id=\"productOptions\">|<h3 class='perfectfor'>)", Pattern.DOTALL));
		
		imagePattern = Pattern.compile("<img id=\"imgTier\" src=\"(.+?.jpg)");
		tableWrapperPattern = Pattern.compile("<table.+?id=\"groupProduct\".+?>(.+?)</table>", Pattern.DOTALL);
		codeDescPricePattern = Pattern.compile("<tr.*?>\\s*<td>(.+?)</td><td.*?>(.+?)</td><td>\\s*(.+?)</td>", Pattern.DOTALL);
		tableWrapperPattern2 = Pattern.compile("<table.+?id=\"singleProduct\".+?>(.+?)</table>", Pattern.DOTALL);
		codeDescPricePattern2 = Pattern.compile("<tr.*?>\\s*<td>(.+?)</td><td.*?>\\s*(.+?)</td>", Pattern.DOTALL);
		
		pProc.addReplacement(6, "<.+?>", "");
		pProc.addReplacement(6, "\\s+", " ");
		
	}
	
	public void run() {
		
		html = fetchPageContent("http://msstoragedirect.co.uk/");
		
		categoryWrappers = findAllInString(html, categoryWrapperPattern);
		
		id = 1;
		
		for(String categoryWrapper : categoryWrappers) {
			
			categories = findAllInString(categoryWrapper, categoryPattern);

			for(String category : categories) {
				
				catHtml = fetchPageContent("http://msstoragedirect.co.uk" + category);

				detLinks = findAllInString(catHtml, detailPagePattern);
				
				for(String detLink : detLinks) {
					
					detHtml = fetchPageContent("http://msstoragedirect.co.uk" + detLink);
					//detHtml = fetchPageContent("http://msstoragedirect.co.uk/products/shelving-and-racking/home-office-shelving/boltless-shelving/105/multi-purpose-boltless-shelving");
					pProc.addData(1, "http://msstoragedirect.co.uk" + detLink);
					System.out.println("http://msstoragedirect.co.uk" + detLink);
					write(detHtml);
					sleep(1000);
				}
			}
		}

	}
	
	public void write(String data) {
		
		pProc.addData(11, id + "");
		
		/*imageLink = findInString(data, imagePattern);
		
		if(!imageLink.equals("")) {
			
			imageName = id + ".jpg";
			
			try {	
				File f = new File ("imagesMSStorage/");
				if (!f.exists()) {
					f.mkdirs();
				}
				saveImage("http://msstoragedirect.co.uk" + imageLink, "imagesMSStorage/" + imageName);
				pProc.addData(7, imageName);
			} catch (IOException e2) {
				pProc.addData(7, "");
			}
		}
		else {
			pProc.addData(7, "");
		}*/
		
		imageName = id + ".jpg";
		pProc.addData(7, imageName);
		
		tableWrapper = findInString(data, tableWrapperPattern);
		
		codeDescPrice = findAllGroupsInString(tableWrapper, codeDescPricePattern);
		
		if(!codeDescPrice.isEmpty()) {
			
			for(String[] cdp : codeDescPrice) {
				
				pProc.addData(8, cdp[0]);
				pProc.addData(9, cdp[1]);
				pProc.addData(10, cdp[2]);
				
				pProc.processPatterns(data, writter);
			}
			
		}
		else {
			
			tableWrapper = findInString(data, tableWrapperPattern2);
			
			codeDescPrice = findAllGroupsInString(tableWrapper, codeDescPricePattern2);
			
			if(!codeDescPrice.isEmpty()) {
				for(String[] cdp : codeDescPrice) {
					
					pProc.addData(8, cdp[0]);
					pProc.addData(9, "");
					pProc.addData(10, cdp[1]);
					
					pProc.processPatterns(data, writter);
				}
			}
			else {
				pProc.addData(8, "");
				pProc.addData(9, "");
				pProc.addData(10, "");
				
				pProc.processPatterns(data, writter);
			}
			
		}
		
		id++;
		
	}
	
	public static void saveImage(String imageUrl, String destinationFile) throws IOException {
		URL url = new URL(imageUrl);
		InputStream is = url.openStream();		
		OutputStream os = new FileOutputStream(destinationFile);

		byte[] b = new byte[2048];
		int length;

		while ((length = is.read(b)) != -1) {
			os.write(b, 0, length);
		}

		is.close();
		os.close();
	}
	
	public static void main(String[] args) {
		new MsStorageDirect().run();
	}

}
